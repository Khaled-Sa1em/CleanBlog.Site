@inherits UmbracoViewPage<Search>

@{
    Layout = "_layout.cshtml";
    // your in c# controller here
    var searchQuery = Request.QueryString["q"];
}
<div class="row gx-4 gx-lg-5 justify-content-center">
    <div class="col-md-10 col-lg-8 col-xl-7">
        <form action="@Model.Url()" method="GET" id="search">
            <div class="row">
                <div class="col-lg-8 col-md-10 mx-auto">
                    <div class="form-group controls">
                        <input type="text" class="form-control col-xs-8" placeholder="Search for something..." name="q" value="">
                    </div>
                </div>
                <div class="col-lg-8 col-md-10 mx-auto my-2">
                    <div class="form-group  text-end ">
                        <button class="btn btn-sm btn-primary search-button">
                            Search <i class="fa fa-search"></i>
                        </button>
                    </div>
                </div>
                <div class="col-lg-8 col-md-10 mx-auto">
                    @if (!string.IsNullOrWhiteSpace(searchQuery))
                    {
                        var results = Umbraco.ContentQuery.Search(searchQuery, string.Empty);
                        long resultCount = results != null && results.Any() ? results.Count() : 0;

                        <p>Your search for <strong>@searchQuery</strong> returned <strong>@resultCount</strong> result@(resultCount==1?null:"s")</p>
                        if (resultCount > 0)
                        {
                            foreach (var result in results)
                            {
                                var authorName = result.Content.Value<string>("authorName");
                                var publishDate = result.Content.Value<DateTime>("publishDate");
                                <div class="post-preview">
                                    <a href="@result.Content.Url()">
                                        <h2 class="post-title">@(result.Content.HasProperty("title")&& result.Content.HasValue("title")? result.Content.Value<string>("title"):result.Content.Name)</h2>
                                        @if (result.Content.HasProperty("subtitle") && result.Content.HasValue("subtitle"))
                                        {
                                            <h3 class="post-subtitle"> @(result.Content.Value<string>("subtitle"))</h3>
                                        }
                                    </a>
                                    @if (!string.IsNullOrWhiteSpace(authorName))
                                    {
                                        <p class="post-meta">
                                            Posted by @authorName on @publishDate.ToString("MMMM dd, yyyy")
                                        </p>
                                    }
                                </div>
                                <hr />

                            }
                        }
                    }
                </div>
            </div>
        </form>
    </div>
</div>
